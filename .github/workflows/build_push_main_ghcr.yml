name: Build Docker Services

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read     
  packages: write   

jobs:
  detect-changes:
    runs-on: ubuntu-22.04
    outputs:
      changed-services: ${{ env.changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Detect changed files
        id: detect
        uses: tj-actions/changed-files@v45.0.4
        with:
          files: |
            Operator-UI/**
            AIS-data-simulator/**

      - name: Parse changed services
        id: parse-changes
        run: |
          services="Operator-UI AIS-data-simulator"
          changed_services=""
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            changed_services="$services"
          else
            for service in $services; do
              if [[ "${{ steps.detect.outputs.all_changed_files }}" =~ (^|[[:space:]])${service}/.*($|[[:space:]]) ]]; then
                changed_services="$changed_services $service"
              fi
            done
          fi
          echo "Changed services: $changed_services"
          echo "changed=$changed_services" >> $GITHUB_ENV

  print-changed-containers:
    needs: detect-changes
    runs-on: ubuntu-22.04
    steps:
      - name: Print changed containers
        run: |
          echo "Containers to be rebuilt: ${{ needs.detect-changes.outputs.changed-services }}"

  build-operator-ui:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changed-services, 'Operator-UI')
    concurrency:
      group: build-operator-ui
      cancel-in-progress: false
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and push Operator-UI container
        uses: docker/build-push-action@v3
        with:
          context: ./Operator-UI
          file: ./Operator-UI/Dockerfile
          tags: |
            ghcr.io/faxatos/aquascope/operator-ui:latest
            ghcr.io/faxatos/aquascope/operator-ui:${{ steps.vars.outputs.sha_short }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

  build-ais-data-simulator:
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changed-services, 'AIS-data-simulator')
    concurrency:
      group: build-ais-data-simulator
      cancel-in-progress: false
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and push AIS-data-simulator satellite container
        uses: docker/build-push-action@v3
        with:
          context: ./AIS-data-simulator
          file: ./AIS-data-simulator/Dockerfile.satellite
          tags: |
            ghcr.io/faxatos/aquascope/ais-data-simulator-satellite:latest
            ghcr.io/faxatos/aquascope/ais-data-simulator-satellite:${{ steps.vars.outputs.sha_short }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Build and push AIS-data-simulator vts container
        uses: docker/build-push-action@v3
        with:
          context: ./AIS-data-simulator
          file: ./AIS-data-simulator/Dockerfile.vts
          tags: |
            ghcr.io/faxatos/aquascope/ais-data-simulator-vts:latest
            ghcr.io/faxatos/aquascope/ais-data-simulator-vts:${{ steps.vars.outputs.sha_short }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
